{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","goodsToogler","good","resultArr","includes","filter","el","push","printCorrectTitle","arg","length","slice","join","this","className","type","onClick","setState","map","Fragment","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,aAAe,SAACC,GACd,IAAMC,EAAS,YAAO,EAAKJ,MAAMC,cAEjC,OAAIG,EAAUC,SAASF,GACdC,EAAUE,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,MAGvCC,EAAUI,KAAKL,GAERC,I,EAGTK,kBAAoB,SAACC,GACnB,OAAmB,IAAfA,EAAIC,OACC,oBAGU,IAAfD,EAAIC,OACA,GAAN,OAAUD,EAAV,gBAGI,GAAN,OAAUA,EAAIE,MAAM,GAAI,GAAGC,KAAK,MAAhC,gBAA6CH,EAAIA,EAAIC,OAAS,GAA9D,kB,4CAGF,WAAU,IAAD,OACCV,EAAiBa,KAAKd,MAAtBC,aAER,OACE,mCACE,sBAAKc,UAAU,MAAf,UACE,6BACGD,KAAKL,kBAAkBR,KAGzBA,EAAaU,OAAS,GACrB,wBACEK,KAAK,SACLD,UAAU,qBACVE,QAAS,WACP,EAAKC,SAAS,CAAEjB,aAAc,MAJlC,mBAUF,oBAAIc,UAAU,OAAd,SACGjB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,cAAC,IAAMiB,SAAP,UACE,qBAAIL,UAAWM,IACb,YACA,CAAE,oBAAqBpB,EAAaI,SAASF,KAF/C,UAKGA,EACD,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,EAAKC,SAAS,CAAEjB,aAAc,EAAKC,aAAaC,MAJpD,SAOGF,EAAaI,SAASF,GACnB,SACA,eAhBWA,iB,GApDjBmB,IAAMC,WAiFTxB,ICnGfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34852163.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  goodsToogler = (good: string): string[] => {\n    const resultArr = [...this.state.selectedGood];\n\n    if (resultArr.includes(good)) {\n      return resultArr.filter(el => el !== good);\n    }\n\n    resultArr.push(good);\n\n    return resultArr;\n  };\n\n  printCorrectTitle = (arg: string[]): string => {\n    if (arg.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (arg.length === 1) {\n      return `${arg} is selected`;\n    }\n\n    return `${arg.slice(0, -1).join(', ')} and ${arg[arg.length - 1]} are selected`;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>\n            {this.printCorrectTitle(selectedGood)}\n          </h1>\n\n          {selectedGood.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"clear-btn list_btn\"\n              onClick={() => {\n                this.setState({ selectedGood: [] });\n              }}\n            >\n              Clear\n            </button>\n          )}\n          <ul className=\"list\">\n            {goodsFromServer.map(good => (\n              <React.Fragment key={good}>\n                <li className={classNames(\n                  'list_item',\n                  { 'list_item--active': selectedGood.includes(good) },\n                )}\n                >\n                  {good}\n                  <button\n                    type=\"button\"\n                    className=\"list_btn list_btn--remove\"\n                    onClick={() => {\n                      this.setState({ selectedGood: this.goodsToogler(good) });\n                    }}\n                  >\n                    {selectedGood.includes(good)\n                      ? 'Remove'\n                      : 'Select'}\n                  </button>\n                </li>\n              </React.Fragment>\n            ))}\n          </ul>\n\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}